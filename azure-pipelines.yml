trigger:
- master
variables:
- group: aws-credentials-original-tenant-data-services-access
- group: preprod-connection-group
- name: imageName
  value: 'companies-house-pipeline-container'
pool:
  vmImage: 'ubuntu-latest'
jobs:
- job: PrintAWSCredentials
  steps:
    - script: |
        echo $(AWS_ACCESS_KEY_ID)
      displayName: Printing Credentials
- job: ConfigureAWSCredentials
  steps:
    - script: |
        sudo pip3 install setuptools
        sudo pip3 install --upgrade awscli
        echo "finished dependencies"
      displayName: Install dependencies
    - script: |
        mkdir .aws
        echo "[default]\naws_access_key_id=$(AWS_ACCESS_KEY_ID)\naws_secret_access_key=$(AWS_SECRET_ACCESS_KEY)" > ~/.aws/credentials
        aws configure set region $(AWS_REGION)
        $(aws ecr get-login --no-include-email)
      displayName: Signing into AWS ECR
    - script: echo dir generation for aws complete
      displayName: Confirmation of AWS Credentials
- job: BuildAndPushDockerimage
  dependsOn: ConfigureAWSCredentials
  steps:
    - checkout: self
    - script: |
        export AWS_ACCESS_KEY_ID=$(AWS_ACCESS_KEY_ID)
        export AWS_SECRET_ACCESS_KEY=$(AWS_SECRET_ACCESS_KEY)
        export AWS_REGION=$(AWS_REGION)
        
        export AWS_ACCESS_KEY_ID_DATA_SERVICES=$(AWS_ACCESS_KEY_ID_DATA_SERVICES)
        export AWS_SECRET_ACCESS_KEY_DATA_SERVICES=$(AWS_SECRET_ACCESS_KEY_DATA_SERVICES)
        
        export PREPROD_ADMIN_USER=$(PREPROD_ADMIN_USER)
        export PREPROD_ADMIN_PASS=$(PREPROD_ADMIN_PASS)
        export PREPROD_DATABASE+$(PREPROD_DATABASE)
        export PREPROD_HOST=$(PREPROD_DATABASE)

      displayName: 'Adding environment variables for AWS'
    - script: |
        export preprod_admin_user=$(preprod-admin-user)
      displayName: 'adding new variable for admin user'
    - script: echo added new variable from $(preprod-admin-user)
      displayName: 'adding new variable'
    - task: Docker@2
      displayName: 'Building the companies-house-container image'
      inputs:
        repository: $(imageName)
        command: 'build'
        Dockerfile: './Dockerfile'
        arguments: |
          --build-arg AWS_ACCESS_KEY_ID_ARG=$(AWS_ACCESS_KEY_ID) 
          --build-arg AWS_SECRET_ACCESS_KEY_ARG=$(AWS_SECRET_ACCESS_KEY) 
          --build-arg AWS_REGION_ARG=$(AWS_REGION)
          
          --build-arg AWS_ACCESS_KEY_ID_DATA_SERVICES=$(AWS_ACCESS_KEY_ID_DATA_SERVICES)
          --build-arg AWS_SECRET_ACCESS_KEY_DATA_SERVICES=$(AWS_SECRET_ACCESS_KEY_DATA_SERVICES)
          
          --build-arg PREPROD_HOST=$(PREPROD_HOST)
          --build-arg PREPROD_ADMIN_USER=$(PREPROD_ADMIN_USER)
          --build-arg PREPROD_ADMIN_PASS=$(PREPROD_ADMIN_PASS)
          --build-arg PREPROD_DATABASE=$(PREPROD_DATABASE)
        buildContext: .
        tags: |
          latest
          $(Build.BuildId)
    - script: docker image ls
      displayName: 'Listing Docker containers for debug'
    - task: ECRPushImage@1
      displayName: 'Pushing $(imageName):latest to ECR'
      inputs:
        sourceImageName: $(imageName)
        repositoryName: $(imageName)